<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title><![CDATA[sabre.io]]></title>
    <link href="http://sabre.io/atom.xml" rel="self"/>
    <link href="http://sabre.io/"/>
    <updated>2017-04-16T21:52:00+00:00</updated>
    <id>http://sabre.io/</id>
        <generator uri="http://sculpin.io/">Sculpin</generator>
            <entry>
            <title type="html"><![CDATA[Development of sabre/dav and related packages are indefinitely on hold]]></title>
            <link href="http://sabre.io/blog/2017/development-on-hold"/>
            <updated>2017-04-16T21:51:00+00:00</updated>
            <id>http://sabre.io/blog/2017/development-on-hold</id>
            <content type="html"><![CDATA[<p>Hi there! My name is Evert, and for the past 10 years I've probably done
around 90-95% of development for the <a href="http://sabre.io/">sabre/*</a> packages, and took over 
<a href="http://sabre.io/baikal">Baikal</a> development last year.</p>

<p>After this time, it all became a little bit too much for me to maintain
these. I <a href="https://evertpot.com/sabredav-eol/">wrote a blog post</a> about this. This post is a follow-up that I'm
cross-posting on both my own blog and sabre.io.</p>

<p>I want to start with a THANK YOU! So many people have written in with support
and understanding, and told me about how these libraries have helped them out
in the past. It was heartwarming and also bittersweet.</p>

<h2 id="support-for-sabre%2F%2A-and-baikal">Support for sabre/* and Baikal</h2>

<p>I was asked what's going to happen with future support for these projects. If
you read my post, the only answer I can give you is: "I don't know".</p>

<p>I'm no longer doing maintenance aside from an occasional bugfix when I feel
like it, but I'm no longer giving any guarantees. It's really completely up to
you.</p>

<p>If you're a corporation and rely on the sabre/* projects, and you're also willing
to invest in this, <a href="m&#97;&#105;&#108;&#116;&#111;&#x3a;&#x6d;&#x65;&#x40;&#x65;v&#101;&#114;&#116;&#112;&#111;&#x74;&#x2e;&#x63;&#x6f;&#x6d;">drop me a line</a>. If there's a few businesses like yours,
it might just be enough to setup a small foundation and hire a person to
continue working on this and I'm willing to help in setting this up.</p>

<p>So far there's been no serious offers of this sort, so your best bet might be
to understand the sabre/* source (it's not as hard as you think) and treat the
same way as in-house developed code.</p>

<p>A few have offered to just pay me to work on specific things. I appreciate
this, but one-off projects don't make a lot of sense for me and one of my
biggest issues has always been finding time, not money.</p>

<p>For those of you that are developers and interested in taking over maintenance,
I would just want to say: do it! You don't need my permission or blessing.</p>

<p>The packages are on github, you can submit pull requests and there's also lots
of open, unanswered support questions. If over time the quality of your
contributions is high, I'm super open to just hand over control of the 
repositories you're interested in.</p>

<p>Someone also asked "is there going to be a fork?", which I found a hilarious
question to receive because obviously I wouldn't be very interested in this
idea. If you're thinking of forking though, consider the fact that you can also
contribute to the main project and benefit from the positive reputation the
project already has.</p>

<h2 id="some-small-next-steps">Some small next steps</h2>

<p>At this point I shut down the mailing list and the comments section on
sabre.io. Support questions come in through both of these channels, and without
anyone to monitor these, it seems better that they're gone. Go to github, there's
more eyes there.</p>

<p>I'm also turning off github notifications for all of these projects. If you
really need to get a hold of me, email me or mention <code>@evert</code> on github.</p>

<p>Perhaps in time someone else will post
a happy update here announcing a new maintainer and renewed interest.</p>

<p>Until then, I'm sorry I'm letting you down and thanks to the hundreds of people
that have supported me! Keep an eye on <a href="https://evertpot.com/">evertpot.com</a> if you're curious
what I'm up to next!</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[sabre/dav 3.2.2 released]]></title>
            <link href="http://sabre.io/blog/2017/sabre-dav-3.2.2-release"/>
            <updated>2017-02-15T02:45:34+00:00</updated>
            <id>http://sabre.io/blog/2017/sabre-dav-3.2.2-release</id>
            <content type="html"><![CDATA[<p>We just released sabre/dav 3.2.2. This release fixes a regression introduced
with sabre/dav 3.2.1 related to CardDAV synchronization.</p>

<p>At the very least Em Client was affected by this.</p>

<p>To upgrade sabre/http, make sure your <code>composer.json</code> requires "^3.2" for
sabre/dav and run <code>composer update</code>.</p>

<p>Full changelog can be found on <a href="https://github.com/fruux/sabre-dav/blob/3.2.2/CHANGELOG.md">Github</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[sabre/dav 3.2.1 released]]></title>
            <link href="http://sabre.io/blog/2017/sabre-dav-3.2.1-release"/>
            <updated>2017-01-29T18:40:41+00:00</updated>
            <id>http://sabre.io/blog/2017/sabre-dav-3.2.1-release</id>
            <content type="html"><![CDATA[<p>We just released sabre/dav 3.2.1. This release improves syncing large calendars
when using SQLite and adds a new feature that allows CardDAV clients to use
property-filters when requesting addressbooks (thanks @DeepDiver1975).</p>

<p>If you're a user of the zip distribution, this release also updates all the
dependencies so you get a number of bug fixes and performance improvements from
those too.</p>

<p>To upgrade sabre/http, make sure your <code>composer.json</code> requires "^3.2" for
sabre/dav and run <code>composer update</code>.</p>

<p>Full changelog can be found on <a href="https://github.com/fruux/sabre-dav/blob/3.2.1/CHANGELOG.md">Github</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[sabre/http 4.2.2 released]]></title>
            <link href="http://sabre.io/blog/2016/sabre-http-4.2.2-release"/>
            <updated>2016-12-07T18:43:40+00:00</updated>
            <id>http://sabre.io/blog/2016/sabre-http-4.2.2-release</id>
            <content type="html"><![CDATA[<p>Happy 2017!</p>

<p>We just released sabre/http 4.2.2. This release adds a workaround for several
broken HTTP client implementations, that send invalid <code>Content-Length</code> headers.</p>

<p>This should improve general compatibility with no further side-effects.</p>

<p>To upgrade sabre/http, make sure your <code>composer.json</code> requires "^4.2" for
sabre/http and run <code>composer update</code>.</p>

<p>Full changelog can be found on <a href="https://github.com/fruux/sabre-http/blob/4.2.2/CHANGELOG.md">Github</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[sabre/uri 2.1.0 and 1.2.0 released]]></title>
            <link href="http://sabre.io/blog/2016/sabre-uri-2.1.0-1.2.0-release"/>
            <updated>2016-12-07T00:59:19+00:00</updated>
            <id>http://sabre.io/blog/2016/sabre-uri-2.1.0-1.2.0-release</id>
            <content type="html"><![CDATA[<p>We just released sabre/uri 2.1.0 and 1.2.0. This release adds a new pure-php
fallback parser for uris to work around two problems with PHP's <code>parse_url()</code>,
which had trouble with uris that start with a <code>scheme:///</code> (triple-slash) and
relative uri containing an unencoded colon.</p>

<p>2.1.0 and 1.2.0 have an identical API, the only difference is that 2.1.0 uses
strict PHP 7 typehints and 1.2.0 supports older PHP versions.</p>

<p>To upgrade sabre/uri, make sure your <code>composer.json</code> requires "^2.1" for
sabre/uri and run <code>composer update</code>.</p>

<p>Full changelog can be found on <a href="https://github.com/fruux/sabre-uri/blob/2.1.0/CHANGELOG.md">Github</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[sabre/vobject 4.1.2 released]]></title>
            <link href="http://sabre.io/blog/2016/sabre-vobject-4.1.2-release"/>
            <updated>2016-12-06T04:19:17+00:00</updated>
            <id>http://sabre.io/blog/2016/sabre-vobject-4.1.2-release</id>
            <content type="html"><![CDATA[<p>We just released sabre/vobject 4.1.2.</p>

<p>This release adds a few new features, and fixes several issues:</p>

<ol>
<li>Support for <code>BYWEEKDAY</code> and <code>BYWEEKNO</code> recurrences when <code>FREQ=YEARLY</code>.</li>
<li>Support for more Windows and Outlook 365 timezone ID's.</li>
<li>Fixing a problem with all-day events in the recurrence iterator.</li>
</ol>

<p>Upgrade sabre/vobject by running:</p>

<pre><code>composer update sabre/vobject
</code></pre>

<p>Full changelog can be found on <a href="https://github.com/fruux/sabre-vobject/blob/4.1.2/CHANGELOG.md">Github</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[sabre/xml 2 released]]></title>
            <link href="http://sabre.io/blog/2016/sabre-xml-2.0.0-release"/>
            <updated>2016-11-16T05:58:46+00:00</updated>
            <id>http://sabre.io/blog/2016/sabre-xml-2.0.0-release</id>
            <content type="html"><![CDATA[<p>We just released sabre/xml 2.0.0.  Just like the major sabre/uri and
sabre/event releases earlier, the main change is that we now require PHP 7
and use strict typing across the board.</p>

<p>For most people this upgrade should be seamless. The exception is if your
own code already opted-in to strict typing and you were sending incorrect
types to sabre/xml.</p>

<ul>
<li><a href="https://github.com/fruux/sabre-xml/blob/2.0.0/CHANGELOG.md">Changelog</a>.</li>
<li><a href="https://github.com/fruux/sabre-xml/releases">Release info</a>.</li>
</ul>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[sabre/event 5 released]]></title>
            <link href="http://sabre.io/blog/2016/sabre-event-5.0.0-release"/>
            <updated>2016-10-23T19:24:04+00:00</updated>
            <id>http://sabre.io/blog/2016/sabre-event-5.0.0-release</id>
            <content type="html"><![CDATA[<p>We just released sabre/event 5.0.0. This is only a month after the last major
release, but it's for a good reason.</p>

<p>We've made a change in how coroutines work. Co-routines, which are based on
generators were originally introduced in sabre/event for PHP 5.5.</p>

<p>At the time it was not possible for a PHP generator function to return
anything like this:</p>

<pre><code>function foo() {
    yield 1;
    return 2;
}
</code></pre>

<p>To work with this limitation in coroutines, we treated the last value that
was passed with <code>yield</code> as the "returned value".</p>

<p>Since PHP 7 it is possible to use <code>return</code> and the PHP Generator object has a
<code>getReturn()</code> method to access it.</p>

<p>We missed this in sabre/event 4, but it was quickly pointed out by Felix
Becker.</p>

<p>Using <code>return</code> makes so much sense now we can, it was worth making a BC break
for and releasing sabre/event 5 with the more sane behavior for PHP 7.</p>

<p>So today there's a sabre/event 5, and the only change is that if the previous
example of the generator function is used in the coroutine system, it will now
have <code>2</code> as its result instead of <code>1</code>.</p>

<ul>
<li><a href="https://github.com/fruux/sabre-event/blob/5.0.0/CHANGELOG.md">Changelog</a>.</li>
<li><a href="https://github.com/fruux/sabre-event/releases">Release info</a>.</li>
</ul>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[sabre/xml 1.5.0 released]]></title>
            <link href="http://sabre.io/blog/2016/sabre-xml-1.5.0-release"/>
            <updated>2016-10-09T23:04:39+00:00</updated>
            <id>http://sabre.io/blog/2016/sabre-xml-1.5.0-release</id>
            <content type="html"><![CDATA[<p>We just released sabre/xml 1.5.0. This release puts the minimim PHP version at
PHP 5.5.</p>

<p>This release fixes an infinite loop bug during parsing of some invalid XML
documents, and contains an improvement in how we're dealing with the "context
stack", thanks to the PHP 5.5 <code>finally</code> keyword. Upgrading is recommended.</p>

<p>Upgrade sabre/xml by running:</p>

<pre><code>composer update sabre/xml
</code></pre>

<p>Full changelog can be found on <a href="https://github.com/fruux/sabre-xml/blob/1.5.0/CHANGELOG.md">Github</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[sabre/dav 2.1 End of life]]></title>
            <link href="http://sabre.io/blog/2016/sabre-dav-2.1-eol"/>
            <updated>2016-10-07T03:48:20+00:00</updated>
            <id>http://sabre.io/blog/2016/sabre-dav-2.1-eol</id>
            <content type="html"><![CDATA[<p>sabre/dav 2.1 is now "end of life". This means that no more bugs will be
fixed, including security bugs.</p>

<p>We've released one final release (<a href="https://github.com/fruux/sabre-dav/releases/tag/2.1.11">2.1.11</a>) with some last final tweaks,
but you're strongly urged to upgrade to at least 3.0, and preferably 3.2.</p>

<p>For more information about the support schedule, and for upgrade instructions,
check out the <a href="/dav/upgrading/">upgrading</a> page.</p>

<p>Because this is the last release to use the (relatively unpopular) sabre/http
3.x package, this also marks sabre/http 3.x as EOL.</p>
]]></content>
        </entry>
    </feed>