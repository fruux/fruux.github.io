<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title><![CDATA[sabre.io]]></title>
    <link href="http://sabre.io/atom.xml" rel="self"/>
    <link href="http://sabre.io/"/>
    <updated>2016-02-20T21:23:01+00:00</updated>
    <id>http://sabre.io/</id>
        <generator uri="http://sculpin.io/">Sculpin</generator>
            <entry>
            <title type="html"><![CDATA[Baïkal joins sabre.io]]></title>
            <link href="http://sabre.io/blog/2016/baikal-joins-sabre-io"/>
            <updated>2016-02-15T21:28:57+00:00</updated>
            <id>http://sabre.io/blog/2016/baikal-joins-sabre-io</id>
            <content type="html"><![CDATA[<p><img src="/img/baikal.png" style="width: 100%; max-width: 300px; float: right; padding: 10px" /></p>

<p>For a long time Baïkal has been one of the most popular implementations of
sabre/dav. Baïkal fills one of the biggest gaps that out-of-the-box sabre/dav
has: an easy to use installer and admin interface. It's the best choice if
you're looking for a light-weight caldav/carddav server.</p>

<p>However, since a while development for this project has stagnated a little bit.
The last release (0.2.7) was from January 2014. The result of this was that
many users of Baïkal were on an older version of sabre/dav and there were quite
a bit of open support tickets on Github.</p>

<p>A lot of this had to do with the development of Baïkal 2. This version was
going to be a complete rewrite based on Symfony components and React. While
much of the development focus had been on that new version, users of the
existing system did not get all the attention they needed.</p>

<p>So we've had a talk with the lead maintainer for Baïkal (Jérôme Schneider from
<a href="http://netgusto.com/">Netgusto</a>), and proposed to bring Baïkal under the 'sabre.io' umbrella of
projects. What this means in practice is that:</p>

<ul>
<li>We're moving the existing website and documentation over from
baikal-server.com to sabre.io.</li>
<li>We're now helping with support, and closed over a hundred tickets already.</li>
<li>We're taking over maintenance of Baikal 0.x, and today we're releasing 0.3.1.</li>
<li>Eventually we will release a 1.0 version of Baikal, unless Baikal 2 is ready
first.</li>
</ul>

<h2>Baïkal 0.3.1</h2>

<p>Baïkal 0.3.1 is now the recommended version of Baïkal. This release fixes the
most reported issues with Baikal, and also:</p>

<ul>
<li>Upgrades sabre/dav from version 1.8 to 3.1.</li>
<li>Supports PHP 7.</li>
<li>Makes the minimum PHP version 5.5.</li>
<li>Adds support for calendar/addressbook export.</li>
<li>Adds support for WebDAV-Sync.</li>
</ul>

<p>Effective immediately, this is the only supported Baïkal version.</p>

<p>We will also continue to make fixes and improvements in this branch of
development, as they come up.</p>

<p>Downloads are now distributed via <a href="https://github.com/fruux/Baikal/releases">Github</a>. If you are upgrading from
version 0.2.7, you can find the upgrade instructions <a href="/baikal/upgrade/">here</a>.</p>

<h2>Relationship between Baïkal, Baïkal 2 &amp; sabre/katana</h2>

<p>For those following this project, you might also be aware that we've already
had a project with very similar goals on sabre.io called <a href="/katana/">katana</a>.
So with Baïkal, Baïkal 2 and sabre/katana combined, there are effectively
three active projects that all overlap in the use-case they address.</p>

<p>We haven't fully decided yet what route to take with these. Eventually we would
like to end up with a single active project that addresses this main use-case.
So down the road we'll try to find some way to merge these projects and combine
the best parts of all of them. Baïkal 2 in particular has a beautiful
interface, and sabre/katana had strong benefits because its goal was to make it
fully run as a javascript fat client, allowing it to be used for other
sabre/dav implementations such as Owncloud, and even non-sabre/dav
installations.</p>

<p>The biggest factor in development of the katana project is simply lack of
funding, which means that we can't afford to spend time on it to bring it to a
1.0. This is not unlike Baïkal and Baïkal 2, which has for a large part been a
"labor of love" by it's author Jérôme Schneider.</p>

<p>So what we at sabre.io and fruux commit to is:</p>

<ul>
<li>Continuous maintenance and support for Baikal 0.x.</li>
<li>Eventually release this as Baikal 1.0.</li>
</ul>

<p>As for sabre/katana and Baïkal 2... It's hard to make promises. They are done
when they are done, and we'll keep a look at for companies interested in
funding or sponsoring development of these. Also, we're looking for more
maintainers / developers for these. If you're interested, drop us a line! Any
level of experience welcome.</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[sabre/xml 1.4.0 released]]></title>
            <link href="http://sabre.io/blog/2016/sabre-xml-1.4.0-release"/>
            <updated>2016-02-14T23:47:24+00:00</updated>
            <id>http://sabre.io/blog/2016/sabre-xml-1.4.0-release</id>
            <content type="html"><![CDATA[<p>We just released sabre/xml 1.4.0. This release fixes a number of problems
related to serializing value objects, and in particular array properties.</p>

<p>We also introduced a BC break. Value objects with properties that are set
to null or empty arrays are now skipped, as we feel that this is a more
sane default. It could influence your xml output though, so if you use
value objects, keep a close eye on if this affects you.</p>

<p>Update sabre/xml by running:</p>

<pre><code>composer update sabre/xml
</code></pre>

<p>If that didn't update your sabre/xml, make sure you are requiring <code>^1.4.0</code> in
your <code>composer.json</code>.</p>

<p>Full changelog can be found on <a href="https://github.com/fruux/sabre-xml/blob/1.4.0/CHANGELOG.md">Github</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[sabre/dav 3.1.1 released]]></title>
            <link href="http://sabre.io/blog/2016/sabre-dav-3.1.1-release"/>
            <updated>2016-01-25T21:25:23+00:00</updated>
            <id>http://sabre.io/blog/2016/sabre-dav-3.1.1-release</id>
            <content type="html"><![CDATA[<p>We just released sabre/dav 3.1.1. This release fixes a regression
that prevented the browser plugin from working for people using both
CalDAV scheduling and delegation.</p>

<p>Update sabre/dav by running:</p>

<pre><code>composer update sabre/dav
</code></pre>

<p>Or download the zip from the <a href="https://github.com/fruux/sabre-dav/releases">releases</a> page.</p>

<p>Full changelog can be found on <a href="https://github.com/fruux/sabre-dav/blob/3.1.1/CHANGELOG.md">Github</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[sabre/dav 2.1.9 released]]></title>
            <link href="http://sabre.io/blog/2016/sabre-dav-2.1.9-release"/>
            <updated>2016-01-25T21:04:33+00:00</updated>
            <id>http://sabre.io/blog/2016/sabre-dav-2.1.9-release</id>
            <content type="html"><![CDATA[<p>We just released sabre/dav 2.1.9, which contains a fix to enable PHP 7
support. This release includes sabre/vobject 3.5.0 which was also fixed
to support PHP 7.</p>

<p>For more information about this change and this decision read the <a href="/blog/2016/sabre-vobject-3.4.9-and-3.5.0-release/">vobject
post</a>.</p>

<p>Update sabre/dav by running:</p>

<pre><code>composer update sabre/dav
</code></pre>

<p>Or download the zip from the <a href="https://github.com/fruux/sabre-dav/releases">releases</a> page.</p>

<p>Full changelog can be found on <a href="https://github.com/fruux/sabre-dav/blob/2.1.9/ChangeLog.md">Github</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[sabre/dav 3.0.7 released]]></title>
            <link href="http://sabre.io/blog/2016/sabre-dav-3.0.7-release"/>
            <updated>2016-01-12T23:00:35+00:00</updated>
            <id>http://sabre.io/blog/2016/sabre-dav-3.0.7-release</id>
            <content type="html"><![CDATA[<p>If you've been following this blog, you might have seen it coming. We just
released sabre/dav 3.0.7. This release supports PHP 7.</p>

<p>For more information about this change and this decision read the <a href="/blog/2016/sabre-vobject-3.4.9-and-3.5.0-release/">vobject
post from yesterday</a>.</p>

<p>Update sabre/dav by running:</p>

<pre><code>composer update sabre/dav
</code></pre>

<p>Or download the zip from the <a href="https://github.com/fruux/sabre-dav/releases">releases</a> page.</p>

<p>Full changelog can be found on <a href="https://github.com/fruux/sabre-dav/blob/3.0.7/CHANGELOG.md">Github</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[sabre/vobject 3.4.9 and 3.5.0 release]]></title>
            <link href="http://sabre.io/blog/2016/sabre-vobject-3.4.9-and-3.5.0-release"/>
            <updated>2016-01-11T18:39:49+00:00</updated>
            <id>http://sabre.io/blog/2016/sabre-vobject-3.4.9-and-3.5.0-release</id>
            <content type="html"><![CDATA[<p>In a reversal of an earlier statement, we're releasing a sabre/vobject 3.x
version with PHP 7 support.</p>

<p>We just release two new versions of the sabre/vobject package; <code>3.4.9</code> and
<code>3.5.0</code>.  <code>3.4.9</code> is identical to <code>3.4.8</code> but now explictly forbids being
installed on PHP 7, via composer.json.</p>

<p><code>3.5.0</code> introduces two differences:</p>

<ol>
<li>PHP 7 <em>is</em> supported.</li>
<li>Two classes have been renamed. <code>Sabre\VObject\Property\Float</code> is now
<code>Sabre\VObject\Property\FloatValue</code> and <code>Sabre\VObject\Property\Integer</code>
is now called <code>Sabre\VObject\Property\IntegerValue</code>.</li>
</ol>

<p>For most people the new class names will have 0 effect on your code. Almost
everyone should just be able to upgrade from 3.4.x to 3.5.0 without any
modifications.</p>

<p>The reason we've done this is due to some external pressure of sabre/* users,
who argued that it's not good that there's not a single sabre/vobject or sabre/dav
package that supports <em>both</em> PHP 5.4 and PHP 7. Thankfully this change is small
enough that it's relatively low impact.</p>

<p>Upgrade sabre/vobject by running:</p>

<pre><code>composer update sabre/vobject
</code></pre>

<p>If this didn't upgrade you to 3.5.0, make sure that your composer.json file
has a line that looks like this:</p>

<pre><code>"sabre/vobject" : "^3.5.0"
</code></pre>

<p>Because the difference is so minor, in the future we'll only maintain the 3.5
(and 4.0) branch of vobject, and effectively drop support for 3.4. If this
concerns you, drop me a line as maybe we can help.</p>

<p>The <code>3.4.9</code> tag therefore mainly exist as an indicator to people who have a
composer dependency targetting <code>3.4.*</code> with composer and are attempting to
use PHP7, or people who have a rather complex dependency tree.</p>

<p>Full changelog of this release can be found on <a href="https://github.com/fruux/sabre-vobject/blob/3.5.0/ChangeLog.md">Github</a>.</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[sabre/vobject 4.0.2 release]]></title>
            <link href="http://sabre.io/blog/2016/sabre-vobject-4.0.2-release"/>
            <updated>2016-01-11T17:43:58+00:00</updated>
            <id>http://sabre.io/blog/2016/sabre-vobject-4.0.2-release</id>
            <content type="html"><![CDATA[<p>We just released sabre/vobject 4.0.2.</p>

<p>This version fixes a regression introduced in 4.0.0. When parsing objects with
a <code>CHARSET</code> parameter, in documents that do not support <code>CHARSET</code>, which is
everything except vCard 2.1, the parser would throw an error for unrecognized
values.</p>

<p>If you are parsing iCalendar or vCards, upgrading is highly recommended.</p>

<p>Upgrade sabre/vobject by running:</p>

<pre><code>composer update sabre/vobject
</code></pre>

<p>If this didn't upgrade you to 4.0.2, make sure that your composer.json file
has a line that looks like this:</p>

<pre><code>"sabre/vobject" : "~4.0.2"
</code></pre>

<p>Full changelog of this release can be found on <a href="https://github.com/fruux/sabre-vobject/blob/4.0.2/CHANGELOG.md">Github</a>.</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[sabre/dav 3.1 released]]></title>
            <link href="http://sabre.io/blog/2016/sabre-dav-3.1-release"/>
            <updated>2016-01-06T23:34:20+00:00</updated>
            <id>http://sabre.io/blog/2016/sabre-dav-3.1-release</id>
            <content type="html"><![CDATA[<p>We're a bit late to the party, but we finally have a PHP 7 compatible release
for sabre/dav.</p>

<p>The master branch had PHP 7 support for a while. The original plan for 3.1 was
to include CalDAV sharing support, but this has been taking longer than
expected.</p>

<p>The result was that we have not had a stable PHP 7-compatible release. So
instead of waiting until all the 3.1 features were ready, we've figured it's
better to get 3.1 out as soon as possible and move the new features over to
a future 3.2 release. So here it is, 6 months after the last major release!</p>

<p>Aside from PHP 7 support, there's a few other changes:</p>

<ul>
<li>The minimum PHP version is now PHP 5.5.</li>
<li>We switched to <a href="/blog/2015/sabre-vobject-4.0-released/">vobject 4</a></li>
<li>We have support for "Calendar availability" in CalDAV. This feature allows
users to specify what their work hours are (using compatible clients). This
information will then be taken into consideration when generating freebusy
responses.</li>
<li>Lots of memory improvements, stability fixes and better exception messaging.</li>
</ul>

<p>Contrary to past 'major' releases, this should be fairly easy for people to
upgrade to. The BC changes will only affect a very small group.</p>

<ul>
<li>For a full list of changes and BC breaks, read <a href="/dav/upgrade/3.0-to-3.1/">the migration document</a>.</li>
<li>Check out the <a href="https://github.com/fruux/sabre-dav/blob/3.1.0/CHANGELOG.md">Changelog</a> if you need even more detail.</li>
<li>Use composer, or <a href="https://github.com/fruux/sabre-dav/releases">download the zip</a> to get started with this.</li>
</ul>

<p>This release also marks the beginning of the 'life support' period for
sabre/dav 3.0.x. We'll continue to do bugfixes for another 12 months.</p>

<p>Happy new year!</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[sabre/http 4.2.1 released]]></title>
            <link href="http://sabre.io/blog/2016/sabre-http-4.2.1-release"/>
            <updated>2016-01-06T23:01:06+00:00</updated>
            <id>http://sabre.io/blog/2016/sabre-http-4.2.1-release</id>
            <content type="html"><![CDATA[<p>We just released sabre/http 4.2.1.</p>

<p>This release fixes an issue related to sending partial streams to http
clients. This is used for for example when dealing with <code>Range:</code> requests.</p>

<p>Update sabre/http by running:</p>

<pre><code>composer update sabre/http
</code></pre>

<p>Full changelog can be found on <a href="https://github.com/fruux/sabre-http/blob/4.2.1/CHANGELOG.md">Github</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[sabre/http 4.2.0 released]]></title>
            <link href="http://sabre.io/blog/2016/sabre-http-4.2.0-released"/>
            <updated>2016-01-04T21:58:09+00:00</updated>
            <id>http://sabre.io/blog/2016/sabre-http-4.2.0-released</id>
            <content type="html"><![CDATA[<p>We just released sabre/http 4.2.0.</p>

<p>This release is extremely minor. It just tells composer that it supports
either <a href="/event/">sabre/event</a> 2.0 or 3.0.</p>

<p>Update sabre/http by running:</p>

<pre><code>composer update sabre/http
</code></pre>

<p>Full changelog can be found on <a href="https://github.com/fruux/sabre-http/blob/4.2.0/CHANGELOG.md">Github</a></p>
]]></content>
        </entry>
    </feed>