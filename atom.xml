<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title><![CDATA[sabre.io]]></title>
    <link href="http://sabre.io/atom.xml" rel="self"/>
    <link href="http://sabre.io/"/>
    <updated>2014-10-24T03:48:01+00:00</updated>
    <id>http://sabre.io/</id>
        <generator uri="http://sculpin.io/">Sculpin</generator>
            <entry>
            <title type="html"><![CDATA[sabre/dav 2.0.5 release]]></title>
            <link href="http://sabre.io/blog/2014/sabre-dav-2.0.5-release"/>
            <updated>2014-10-14T16:49:01+00:00</updated>
            <id>http://sabre.io/blog/2014/sabre-dav-2.0.5-release</id>
            <content type="html"><![CDATA[<p>We just released sabre/dav 2.0.5. Upgrading is highly recommended.</p>

<p>This release has an important bugfix. <code>If-Modified-Since</code> was not handled
correctly, as we were not sending back 304 statuses, but 200 instead.</p>

<p>This could lead clients to believe that their local cache was expired and the
new resource being empty, which in turn makes data-loss a possibility.</p>

<p>In addition to that, the zip also ships with <a href="/vobject/">vobject</a> 3.3.3, which solves
a problem a lot of people have been having with timezone-related errors being
spammed to the PHP error log. Note that this is a PHP bug, but we've provided
a workaround.</p>

<p>Upgrade sabre/dav by running:</p>

<pre><code>composer update sabre/dav
</code></pre>

<p>Or download the zip from the <a href="https://github.com/fruux/sabre-dav/releases">releases</a> page.</p>

<p>Full changelog can be found on <a href="https://github.com/fruux/sabre-dav/blob/2.0.5/ChangeLog.md">Github</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[sabre/event 2.0.1 release]]></title>
            <link href="http://sabre.io/blog/2014/sabre-event-2.0.1-release"/>
            <updated>2014-10-09T22:11:36+00:00</updated>
            <id>http://sabre.io/blog/2014/sabre-event-2.0.1-release</id>
            <content type="html"><![CDATA[<p>We just released sabre/event 2.0.1.</p>

<p>This release fixes two issues related to the <code>EventEmitter::once()</code> method,
and brings its functionality up to par with <code>EventEmitter::on()</code>.</p>

<p>Upgrade sabre/event by running:</p>

<pre><code>composer update sabre/event
</code></pre>

<p>If this didn't upgrade you to 2.0.1, make sure that your composer.json file
has a line that looks like this:</p>

<pre><code>"sabre/event" : "~2.0.1"
</code></pre>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[sabre/vobject 3.3.3 release]]></title>
            <link href="http://sabre.io/blog/2014/sabre-vobject-3.3.3-release"/>
            <updated>2014-10-09T16:15:37+00:00</updated>
            <id>http://sabre.io/blog/2014/sabre-vobject-3.3.3-release</id>
            <content type="html"><![CDATA[<p>We just released sabre/vobject 3.3.3.</p>

<p>This release has additional fixes and improvements for the <a href="/vobject/itip/">iTip</a>
subsystem.</p>

<p>This release also works around a PHP bug that would otherwise spam your php
error log file with 'invalid timezone' exceptions and has support for the
"Line Islands Standard Time" timezone coming from Microsoft products.</p>

<p>Upgrade sabre/vobject by running:</p>

<pre><code>composer update sabre/vobject
</code></pre>

<p>If this didn't upgrade you to 3.3.3, make sure that your composer.json file
has a line that looks like this:</p>

<pre><code>"sabre/vobject" : "~3.3.3"
</code></pre>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[sabre/http 3.0.0 release]]></title>
            <link href="http://sabre.io/blog/2014/sabre-http-3.0.0-release"/>
            <updated>2014-09-23T20:49:01+00:00</updated>
            <id>http://sabre.io/blog/2014/sabre-http-3.0.0-release</id>
            <content type="html"><![CDATA[<p>We just released sabre/http 3.0.0.</p>

<p>We introduced several API breaking changes, so a major version change was
warranted.</p>

<p>In particular, we modified the API to be closer to the draft version of
<a href="https://github.com/php-fig/fig-standards/blob/master/proposed/http-message.md">psr/http</a>.</p>

<p>psr/http is an upcoming standard for PHP development that should unify how we
represent HTTP requests and responses in PHP.</p>

<p>There were several good ideas in this spec, in particular how HTTP headers
are treated, especially when there are multiple headers with the same name,
which is something sabre/http dealt poorly with (not at all).</p>

<h2>Changes</h2>

<ul>
<li>Switched to a PSR-4 directory structure in <code>lib/</code>. This means all classes
are now in <code>lib/</code> instead of <code>lib/Sabre/HTTP</code>. This should not change a
thing if you use the composer autoloader.</li>
<li><code>::setHeaders()</code> used to delete all previous http headers. This is no longer
the case, new headers will simply be added to the existing ones.</li>
<li>Added <code>::getHeaderAsArray()</code>. This method returns a single http header. If
multiple headers with the same name were specified, each value will be an
item in this array.</li>
<li>If you use <code>::getHeader()</code>, and there were more than 1 http header with that
name, we now concatenate all these headers with a comma (<code>,</code>).</li>
<li><code>::addHeader()</code> is new, and will preserve any existing header with that
name. Instead, a second header will be added with the same name and a new
value.</li>
<li><code>::getHeaders()</code> will now return each header value as an array.</li>
<li>The <code>Client</code> class now only follows redirects to HTTP and HTTPS urls.</li>
<li><code>Util::negotiate</code> is deprecated, use <code>Util::negotiateContentType</code> instead.</li>
<li>The <code>Client</code> class can now follow redirects, even if the <code>open_basedir</code>
setting is turned on.</li>
</ul>

<h2>Upgrading</h2>

<p>If you are using sabre/http solely through sabredav, don't upgrade yet unless
you are using the latest development version. If you use sabre/http
independently, ensure that the relevant line in your composer.json looks like
this:</p>

<pre><code>"require" : {
    "sabre/http" : "~3.0.0"
}
</code></pre>

<p>And run <code>composer update sabre/http</code> afterwards.</p>

<h2>No full psr/http compliance</h2>

<p>I've matched the Request and Response to behave closer to the draft psr-http
draft, <em>but</em> I didn't go all the way!</p>

<p>I strongly disapprove of how message bodies are represented. The PSR
introduces an object to wrap PHP streams, that has severely less features,
and due to its design it's incompatible with regular PHP streams and doesn't
cover all our use cases. All under the pretense that PHP streams are hard to
use.</p>

<p>Unless that's fixed, we'll not be fully supporting the specification, but it's
still a draft, and there's still time.</p>

<p>Full changelog can be found on <a href="https://github.com/fruux/sabre-http/blob/3.0.0/ChangeLog.md">Github</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[sabre/vobject 3.3.2 release]]></title>
            <link href="http://sabre.io/blog/2014/sabre-vobject-3.3.2-release"/>
            <updated>2014-09-19T18:58:12+00:00</updated>
            <id>http://sabre.io/blog/2014/sabre-vobject-3.3.2-release</id>
            <content type="html"><![CDATA[<p>We just released sabre/vobject 3.3.2.</p>

<p>Further in-depth testing of the <a href="/vobject/itip/">iTip</a> subsystem has revealed a <em>lot</em> of
small edge-cases that weren't properly covered.</p>

<p>In addition, we now correctly decode <code>ATTACH</code> properties in iCalendar objects
that are specified as a URI, and fixed a few validator rules.</p>

<p>Upgrade sabre/vobject by running:</p>

<pre><code>composer update sabre/vobject
</code></pre>

<p>If this didn't upgrade you to 3.3.2, make sure that your composer.json file
has a line that looks like this:</p>

<pre><code>"sabre/vobject" : "~3.3.2"
</code></pre>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[sabre/dav 2.0.4 release]]></title>
            <link href="http://sabre.io/blog/2014/sabre-dav-2.0.4-release"/>
            <updated>2014-08-27T17:25:22+00:00</updated>
            <id>http://sabre.io/blog/2014/sabre-dav-2.0.4-release</id>
            <content type="html"><![CDATA[<p>We just released sabre/dav 2.0.4.</p>

<p>This releases has a number of improvements, namely:</p>

<ol>
<li>PostgresSQL files have been corrected. Note that while we ship postgres
files, it is not an officially supported database.</li>
<li>After nodes had been deleted, locks were not automatically removed. This was
problematic, because re-creating a node could cause it to be locked
instantly. This is now fixed.</li>
<li>There were some problems with both the default Cal- and CardDAV PDO
backends, when the 'Sync' plugin is not enabled. This is now resolved.</li>
</ol>

<p>Upgrade sabre/dav by running:</p>

<pre><code>composer update sabre/dav
</code></pre>

<p>Or download the zip from the <a href="https://github.com/fruux/sabre-dav/releases">releases</a> page.</p>

<p>Full changelog can be found on <a href="https://github.com/fruux/sabre-dav/blob/2.0.4/ChangeLog.md">Github</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[sabre/vobject 3.3.1 release]]></title>
            <link href="http://sabre.io/blog/2014/sabre-vobject-3.3.1-release"/>
            <updated>2014-08-18T19:39:02+00:00</updated>
            <id>http://sabre.io/blog/2014/sabre-vobject-3.3.1-release</id>
            <content type="html"><![CDATA[<p>We just released sabre/vobject 3.3.1.</p>

<p>Several bugs have been found in 3.3.0, all mostly related to the newly
introduced <a href="/vobject/itip/">iTip</a> functionality.</p>

<p>This release also adds a new feature that allows people to specify new
DATE-TIME values by passing PHP <a href="http://ca2.php.net/manual/en/class.datetime.php">DateTime</a> objects as such:</p>

<pre><code>$vevent-&gt;DTSTART = new DateTime('...');
</code></pre>

<p>This was already possible in a lot of other places, but somehow this was
missed for the 'magic property setter'.</p>

<p>Upgrade sabre/vobject by running:</p>

<pre><code>composer update sabre/vobject
</code></pre>

<p>If this didn't upgrade you to 3.3.1, make sure that your composer.json file
has a line that looks like this:</p>

<pre><code>"sabre/vobject" : "~3.3.1"
</code></pre>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[sabre/vobject 3.3.0 release]]></title>
            <link href="http://sabre.io/blog/2014/sabre-vobject-3.3.0-release"/>
            <updated>2014-08-07T18:50:05+00:00</updated>
            <id>http://sabre.io/blog/2014/sabre-vobject-3.3.0-release</id>
            <content type="html"><![CDATA[<p>We just released sabre/vobject 3.3.0!</p>

<p>This release has a few new features, but also changes a few things. For most
people the upgrade should be seamless though.</p>

<h2>Changes</h2>

<h3>Better RRULE parser</h3>

<p>We now have much better support for <code>RRULE</code>, and especially exceptions to
recurrences. This solved several bugs that have been outstanding for quite
some time.</p>

<p>We now also support <code>RDATE</code>.</p>

<p>One change is that the old <code>Sabre\VObject\RecurrenceIterator</code> is now renamed
to <code>Sabre\VObject\Recur\EventIterator</code>. The old class still exists, but will
be removed in a future version.</p>

<p>Some more info about this feature <a href="/vobject/recurrence/">here</a>.</p>

<h3>iTip support</h3>

<p>VObject now supports generating and parsing <a href="/vobject/itip/">iTip</a> messages. iTip messages
are a type of iCalendar object that are used for things like invites, replies
and cancellations.</p>

<p>More info about this feature on the <a href="/vobject/itip/">iTip page</a>.</p>

<h3>Switched to PSR-4</h3>

<p>The directory structure of the VObject library changed. Everything that was
previously in <code>lib/Sabre/VObject</code> is now moved to <code>lib/</code>.</p>

<p>If you are using composer you don't have to change a thing, but if you
manually wrote an autoloader, you may have to make a change to accomodate for
this.</p>

<p>We also removed <code>lib/Sabre/VObject/includes.php</code>.</p>

<h3>Changelog</h3>

<p>Full changelog can be found on <a href="https://github.com/fruux/sabre-vobject/blob/3.3.0/ChangeLog.md">Github</a></p>

<h2>Upgrading</h2>

<p>To update your sabre/vobject, edit composer.json to make sure that it includes
a line like this:</p>

<pre><code>"sabre/vobject" : "~3.3.0"
</code></pre>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[sabre/dav 1.7 end of support]]></title>
            <link href="http://sabre.io/blog/2014/sabre-dav-1.7-eol"/>
            <updated>2014-07-28T18:58:44+00:00</updated>
            <id>http://sabre.io/blog/2014/sabre-dav-1.7-eol</id>
            <content type="html"><![CDATA[<p>As of right now, sabre/dav 1.7 has reached end of life status.</p>

<p>Version 1.8 has been released in November 2012, so people had 20 months to
upgrade their systems.</p>

<p>We've done one final release (1.7.13), containing a few minor fixes and a newer
version of the sabre/vobject library (if you're using the zip installation).</p>

<p>Upgrade sabre/dav by running:</p>

<pre><code>composer update sabre/dav
</code></pre>

<p>Or download the zip from the <a href="https://github.com/fruux/sabre-dav/releases">releases</a> page.</p>

<p>Full changelog can be found on <a href="https://github.com/fruux/sabre-dav/blob/1.7.13/ChangeLog">Github</a></p>

<h3>What does this mean?</h3>

<p>From this point forward, we will no longer accept bug reports for version 1.7.</p>

<p>Also, no future releases will be made.</p>

<p>We <em>may</em> consider certain security bugs, but there are no guarantees.</p>

<h3>Upgrading to 1.8</h3>

<p>Upgrading to version 1.8 is not difficult. The main change that has been made
between these versions, is that 1.8 makes use of PHP namespaces, where 1.7
uses the classic 'pear-style' prefix notation.</p>

<p>Make sure to check out the <a href="http://sabre.io/dav/upgrade/1.7-to-1.8/">migration instructions</a> for a detailed overview
of the changes.</p>

<p>Keep in mind though that version 2.0 of sabre/dav is also already released. If
you are upgrading, you're highly encouraged to take that additional upgrade
step. Version 2.0 has its own <a href="http://sabre.io/dav/upgrade/1.8-to-2.0/">migration instructions</a>.</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[sabre/dav 2.0.3 release]]></title>
            <link href="http://sabre.io/blog/2014/sabre-dav-2.0.3-release"/>
            <updated>2014-07-14T18:42:21+00:00</updated>
            <id>http://sabre.io/blog/2014/sabre-dav-2.0.3-release</id>
            <content type="html"><![CDATA[<p>We just released sabre/dav 2.0.3.</p>

<p>A number of problems were found in the revamped browser plugin, related to
generating links, and for a number of people none of the css and images
would load due to incorrect CSP rules.</p>

<p>In addition we found out that the <code>TooMuchMatches</code> exception never worked
due to a fatal error, so while fixing that, we also took the opportunity to
change the name of the exception to <code>TooManyMatches</code>. Don't laugh.</p>

<p>Upgrade sabre/dav by running:</p>

<pre><code>composer update sabre/dav
</code></pre>

<p>Or download the zip from the <a href="https://github.com/fruux/sabre-dav/releases">releases</a> page.</p>

<p>Full changelog can be found on <a href="https://github.com/fruux/sabre-dav/blob/2.0/ChangeLog.md">Github</a></p>
]]></content>
        </entry>
    </feed>