<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title><![CDATA[sabre.io]]></title>
    <link href="http://sabre.io/atom.xml" rel="self"/>
    <link href="http://sabre.io/"/>
    <updated>2016-05-23T22:34:52+00:00</updated>
    <id>http://sabre.io/</id>
        <generator uri="http://sculpin.io/">Sculpin</generator>
            <entry>
            <title type="html"><![CDATA[Upcoming changes to iCalendar and vCard validation in sabre/dav 3.2.]]></title>
            <link href="http://sabre.io/blog/2016/validation-changes"/>
            <updated>2016-05-23T22:34:07+00:00</updated>
            <id>http://sabre.io/blog/2016/validation-changes</id>
            <content type="html"><![CDATA[<p>We are currently working on sabre/dav 3.2. <a href="https://github.com/fruux/sabre-dav/releases">A first beta has been released</a>.
This release will include some changes to validating iCalendar and vCard.
These changes might impact you if you use the Card- and CalDAV systems, or if
you are a developer for a Cal/CardDAV client.</p>

<p>In the past we've been pretty lenient in terms of what kind of data you can
send the server. Originally the idea for this was to follow Postel's law, e.g.:</p>

<blockquote>
  <p>Be conservative in what you send, be liberal in what you accept</p>
</blockquote>

<p>I actually believe that Postel's law and following it is <em>not</em> a good idea and
will actually over time cause networks to become less and less compliant.</p>

<p>So starting 3.2 we are dialing up the strictness of the server. The component
inside of sabre/dav responsible for parsing iCalendar and vCard has had a
validation system for a while. sabre/dav now uses that system when you <code>PUT</code>
a new iCalendar object or vCard.</p>

<p>The system is not yet 100% complete, so it will not yet throw errors on every
invalid object, but over time we will make this more strict by adding new
validation rules.</p>

<h2>How it works</h2>

<p>One of the biggest areas in validation is that we're now checking for
properties that are required, and how many instances of properties may
appear.</p>

<p>For example, in iCalendar the <code>PRODID</code> is <em>required</em> to appear in the
top-level iCalendar object.</p>

<p>In that particular case, the system is actually able to repair the incoming
object. It will simply add a default <code>PRODID</code>.</p>

<p>A request for this might look as follows:</p>

<pre><code>PUT /calendars/user/calendar/new-object.ics
Content-Type: text/calendar

BEGIN:VCALENDAR
BEGIN:VEVENT
UID:foo-bar
DTSTAMP:20160523T181200Z
DTSTART:20160524T090000Z
SUMMARY:Meeting
END:VEVENT
END:VCALENDAR
</code></pre>

<p>Since <code>PRODID</code> is missing, sabre/dav will do the folowing:</p>

<ol>
<li>It will automatically add a <code>PRODID</code></li>
<li>It will <strong>no longer</strong> send back an <code>ETag</code> header after the request.</li>
<li>It adds an <code>X-Sabre-Ew-Gross</code> header. This header is an indicator something
was not right in the request, along with a description for a developer what
was wrong with it.</li>
</ol>

<p>The reason we're <em>not</em> returning an <code>ETag</code> is because we have to make
modifications to the object. Not returning an <code>ETag</code> pretty much tells the
client: you must do a <code>GET</code> request after your <code>PUT</code> to find out the current
state of the object and the correct <code>ETag</code>. Fortunately, most clients do this
correctly.</p>

<p>It also works well as a small punishment to a client. They are forced to do an
extra HTTP request, so there is an incentive to fix the bug.</p>

<h2>When we can't do a repair</h2>

<p>There are many cases where we can't guess what the developer's intent was. For
example: every <code>VEVENT</code> must have a <code>DTSTART</code>. If it didn't appear, we can't
really just make one up.</p>

<p>For situations like that, we now always emit HTTP error
<code>415 Unsupported Media Type</code>, along with our <code>X-Sabre-Ew-Gross</code> header.</p>

<h2>Requesting strict handling</h2>

<p>There are also cases where a client developer does not want the server to
automatically repair the object, and instead always do a hard failure when
the server deems an object invalid. This might be especially handy during
development.</p>

<p>To tell the server to always do hard failures, you can simply include the
standard <code>Prefer: handling=strict</code> HTTP header in your PUT requests.</p>

<h2>There are likely going to be compatibility problems</h2>

<p>Because we are becoming more strict, it is likely that there are CalDAV and
CardDAV clients that stop working, because they were sending us invalid data.</p>

<p>To deal with this, we are doing the following:</p>

<ol>
<li>We're testing popular clients to see if they have problems.</li>
<li>If we run into those problems, we try to contact the developer of the
client to see if they are able to fix it.</li>
<li>If they are not fixing the problem, or if we determine that there will be
many users stuck on an old version of their client, we will try to see if
we can add an 'automatic repair' rule to the validation system.</li>
</ol>

<p>The automatic repair will account for most, if not all client bugs, but if we
do run into an issue with a client that will not behave correctly if we don't
return an ETag, and the developer is unwilling to fix the problem (or enough
users can't upgrade) we will consider a client-specific workaround, preferably
based on the <code>User-Agent</code>.</p>

<p>However, we can't test every client on the face of the planet. So we're hoping
developers and users of clients will test sabre/dav 3.2 with their software and
report issues they run into.</p>

<p>Because we completely assume that we <em>will</em> run into new compatibility issues,
and we also completely assume that not every client will be tested when the
3.2 release hits the floor, we recommend users of sabre/dav to test
CalDAV/CardDAV clients they support before upgrading, or waiting a few point
releases so the dust can settle.</p>

<h2>Contact us</h2>

<p>Are you running into a compatibility issue? <a href="https://github.com/fruux/sabre-dav/issues/new">Contact us via our Github
issue tracker</a>.</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[sabre/dav 3.1.3 released]]></title>
            <link href="http://sabre.io/blog/2016/sabre-dav-3.1.3-release"/>
            <updated>2016-04-07T01:10:02+00:00</updated>
            <id>http://sabre.io/blog/2016/sabre-dav-3.1.3-release</id>
            <content type="html"><![CDATA[<p>We just released sabre/dav 3.1.3. This release contains the following changes:</p>

<ul>
<li>We now require libxml 2.7.0 in composer. We always needed this as a minumum
version, but this was not correctly marked.</li>
<li>Fixed an issue in the MySQL table structure for calendars. There was not
enough space to make a calendar to be able to hold events, todos and
journals all at once.</li>
<li>Upgraded sabre/vobject, this will fix a number of scheduling-related bugs.</li>
</ul>

<p>Upgrade sabre/dav by running:</p>

<pre><code>composer update sabre/dav
</code></pre>

<p>Or download the zip from the <a href="https://github.com/fruux/sabre-dav/releases">releases</a> page.</p>

<p>Full changelog can be found on <a href="https://github.com/fruux/sabre-dav/blob/3.1.3/CHANGELOG.md">Github</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[sabre/vobject 4.1.0 released]]></title>
            <link href="http://sabre.io/blog/2016/sabre-vobject-4.1.0-release"/>
            <updated>2016-04-07T00:56:03+00:00</updated>
            <id>http://sabre.io/blog/2016/sabre-vobject-4.1.0-release</id>
            <content type="html"><![CDATA[<p>We just released sabre/vobject 4.1.0. This release is fully compatible with
the 4.0.x series.</p>

<p>This release adds a <code>Sabre\VObject\PHPUnitAssertions</code> trait that, for now,
contains a <code>assertVObjectEqualsVObject()</code> function. This functions works
similar to PHPUnit's built-in <code>assertXmlStringEqualsXmlString()</code>, and can be
used by implementors to check if two iCalendar objects or vCards are identical
semantically.</p>

<p>It also contains a number of other fixes:</p>

<ul>
<li>When doing recurrence expansion, the first event now also have a
<code>RECURRENCE-ID</code> property.</li>
<li>Fixes a bug in processing iTip REPLYs to recurring events.</li>
<li>Better error messages and improved validation in a number of areas.</li>
</ul>

<p>Upgrade sabre/vobject by running:</p>

<pre><code>composer update sabre/vobject
</code></pre>

<p>Full changelog can be found on <a href="https://github.com/fruux/sabre-vobject/blob/4.1.0/CHANGELOG.md">Github</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[sabre/dav 3.0.9 released]]></title>
            <link href="http://sabre.io/blog/2016/sabre-dav-3.0.9-release"/>
            <updated>2016-04-07T00:38:20+00:00</updated>
            <id>http://sabre.io/blog/2016/sabre-dav-3.0.9-release</id>
            <content type="html"><![CDATA[<p>We just released sabre/dav 3.0.9. This release contains the following changes:</p>

<ul>
<li>We now require libxml 2.7.0 in composer. We always needed this as a minumum
version, but this was not correctly marked.</li>
<li>Fixed an issue in the MySQL table structure for calendars. There was not
enough space to make a calendar to be able to hold events, todos and
journals all at once.</li>
<li>Backported a workaround from 3.1 to make Windows 10 clients work.</li>
<li>Upgraded sabre/vobject.</li>
</ul>

<p>Upgrade sabre/dav by running:</p>

<pre><code>composer update sabre/dav
</code></pre>

<p>Or download the zip from the <a href="https://github.com/fruux/sabre-dav/releases">releases</a> page.</p>

<p>Full changelog can be found on <a href="https://github.com/fruux/sabre-dav/blob/3.0.9/CHANGELOG.md">Github</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[sabre/vobject 3.5.1 released]]></title>
            <link href="http://sabre.io/blog/2016/sabre-vobject-3.5.1-release"/>
            <updated>2016-04-07T00:16:13+00:00</updated>
            <id>http://sabre.io/blog/2016/sabre-vobject-3.5.1-release</id>
            <content type="html"><![CDATA[<p>We just released sabre/vobject 3.5.1. This release contains a few small
improvements:</p>

<ol>
<li>When expanding recurring events, <code>RECURRENCE-ID</code> is now correctly added,
even for the first event.</li>
<li>Several fixes in the iTip broker related to recurring events.</li>
</ol>

<p>Upgrade sabre/vobject by running:</p>

<pre><code>composer update sabre/vobject
</code></pre>

<p>Full changelog can be found on <a href="https://github.com/fruux/sabre-vobject/blob/3.5.1/ChangeLog.md">Github</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[CalDAV, CardDAV and WebDAV sharing]]></title>
            <link href="http://sabre.io/blog/2016/dav-sharing"/>
            <updated>2016-03-30T00:13:07+00:00</updated>
            <id>http://sabre.io/blog/2016/dav-sharing</id>
            <content type="html"><![CDATA[<p>CalDAV/CardDAV sharing is something <a href="https://github.com/fruux/sabre-dav/pull/696">we've worked on</a> for quite some time.
Our goal is to have out of the box CalDAV sharing working in the next sabre/dav
version</p>

<p>It's taking a long time to implement, because we're not just writing the code,
we're also writing the standard.</p>

<p>These are the current drafts:</p>

<ul>
<li><a href="https://tools.ietf.org/html/draft-pot-webdav-notifications">WebDAV notifications</a>.</li>
<li><a href="https://tools.ietf.org/html/draft-pot-webdav-resource-sharing">WebDAV resource sharing</a>.</li>
<li><a href="https://tools.ietf.org/html/draft-pot-caldav-sharing">CalDAV sharing</a>.</li>
</ul>

<p>Today I wrote an article on my own blog about how it works and the current
status. <a href="https://evertpot.com/webdav-caldav-carddav-sharing/">Read it here</a>.</p>

<p>We'll be at CalConnect 36 in Hong Kong next month to discuss this more. If
you're in the area and want to discuss calendaring or sabre/dav, drop us a line!</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Baïkal 0.4.0 released]]></title>
            <link href="http://sabre.io/blog/2016/baikal-0.4.0-release"/>
            <updated>2016-03-15T21:40:12+00:00</updated>
            <id>http://sabre.io/blog/2016/baikal-0.4.0-release</id>
            <content type="html"><![CDATA[<p>We just released Baïkal 0.4.0. This release contains a number of changes that
should improve the system for a number of users. The 0.3.x range of releases
had seen a number of stability problems, due to a relatively big sabre/dav
upgrade.</p>

<p>I'm attributing the issues to growing pains. With the 0.4.0 release we hope
that the most of the common issues are solved. This release contains the
following changes:</p>

<ul>
<li>SQlite users had issues syncing. This was due to a newly added feature
(sync reports). Upgrading to 0.4.0 will repair your database schema and
should make existing setups sync again.</li>
<li>The installation threw an error if you didn't have the Sqlite PDO PHP
extension installed.</li>
<li>We added the "Property storage" plugin. This enables a range of features
for clients, such as availability, default alarms and "me card".</li>
<li>We added the Scheduling plugin, which adds scheduling and free-busy.
Enabling this should also solve a problem with iCal, which behaved badly
without this plugin.</li>
<li>We removed the "admin locking" features. In the past it was possible to
disable the Baïkal admin by removing the <code>ENABLE_ADMIN</code> file from the
<code>Specific/</code> folder. This feature is now no longer supported, and users
should instead use their Webserver configuration to block access to
the admin.</li>
</ul>

<p>Read the <a href="/baikal/upgrade/" title="Upgrade instructions">upgrade instructions here</a>. Full changelog can be found on <a href="https://github.com/fruux/Baikal/blob/0.4.0/CHANGELOG.md" title="Change log">Github</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[sabre/dav 3.1.2 released]]></title>
            <link href="http://sabre.io/blog/2016/sabre-dav-3.1.2-release"/>
            <updated>2016-03-13T03:37:00+00:00</updated>
            <id>http://sabre.io/blog/2016/sabre-dav-3.1.2-release</id>
            <content type="html"><![CDATA[<p>We just released sabre/dav 3.1.2. This release contains the following changes:</p>

<ul>
<li>A small issue with cleaning up sync logs after deleting addressbooks. This
could potentially cause a CardDAV client to miss an update.</li>
<li>A fix for supporting non-seekable streams, for those that have custom <code>IFile</code>
implementations with non-seekable streams.</li>
<li>Faster XML parsing and generating due to an update to sabre/xml.</li>
<li>Updates to the sqlite schema to make it more strict.</li>
<li>Better parsing of some <code>RRULE</code> properties.</li>
</ul>

<p>Upgrade sabre/dav by running:</p>

<pre><code>composer update sabre/dav
</code></pre>

<p>Or download the zip from the <a href="https://github.com/fruux/sabre-dav/releases">releases</a> page.</p>

<p>Full changelog can be found on <a href="https://github.com/fruux/sabre-dav/blob/3.1.2/CHANGELOG.md">Github</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[sabre/vobject 4.0.3 released]]></title>
            <link href="http://sabre.io/blog/2016/sabre-vobject-4.0.3-release"/>
            <updated>2016-03-13T00:03:17+00:00</updated>
            <id>http://sabre.io/blog/2016/sabre-vobject-4.0.3-release</id>
            <content type="html"><![CDATA[<p>We just released sabre/vobject 4.0.3. This release contains the following
changes:</p>

<ol>
<li>Added <code>VCard::getByType()</code>, to quickly get a vcard property with a specific
value for <code>TYPE</code>.</li>
<li><code>UNTIL</code> and <code>COUNT</code> were not correctly encoded in the jCal format.</li>
<li><code>RRULE</code> now has more validation and repair rules.</li>
</ol>

<p>Upgrade sabre/vobject by running:</p>

<pre><code>composer update sabre/vobject
</code></pre>

<p>Full changelog can be found on <a href="https://github.com/fruux/sabre-vobject/blob/4.0.3/CHANGELOG.md">Github</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[sabre/dav 3.0.8 released]]></title>
            <link href="http://sabre.io/blog/2016/sabre-dav-3.0.8-release"/>
            <updated>2016-03-12T22:40:55+00:00</updated>
            <id>http://sabre.io/blog/2016/sabre-dav-3.0.8-release</id>
            <content type="html"><![CDATA[<p>We just released sabre/dav 3.0.8. This release contains the following changes:</p>

<ul>
<li>A small issue with cleaning up sync logs after deleting addressbooks. This
could potentially cause a carddav client to miss an update.</li>
<li>A fix for supporting non-seekable streams, for those that have custom <code>IFile</code>
implementations with non-seekable streams.</li>
<li>Faster XML parsing and generating.</li>
</ul>

<p>Upgrade sabre/dav by running:</p>

<pre><code>composer update sabre/dav
</code></pre>

<p>Or download the zip from the <a href="https://github.com/fruux/sabre-dav/releases">releases</a> page.</p>

<p>Full changelog can be found on <a href="https://github.com/fruux/sabre-dav/blob/3.0.8/CHANGELOG.md">Github</a></p>
]]></content>
        </entry>
    </feed>