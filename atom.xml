<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title><![CDATA[sabre.io]]></title>
    <link href="http://sabre.io/atom.xml" rel="self"/>
    <link href="http://sabre.io/"/>
    <updated>2017-01-02T19:47:17+00:00</updated>
    <id>http://sabre.io/</id>
        <generator uri="http://sculpin.io/">Sculpin</generator>
            <entry>
            <title type="html"><![CDATA[sabre/http 4.2.2 released]]></title>
            <link href="http://sabre.io/blog/2016/sabre-http-4.2.2-release"/>
            <updated>2016-12-07T18:43:40+00:00</updated>
            <id>http://sabre.io/blog/2016/sabre-http-4.2.2-release</id>
            <content type="html"><![CDATA[<p>Happy 2017!</p>

<p>We just released sabre/http 4.2.2. This release adds a workaround for several
broken HTTP client implementations, that send invalid <code>Content-Length</code> headers.</p>

<p>This should improve general compatibility with no further side-effects.</p>

<p>To upgrade sabre/http, make sure your <code>composer.json</code> requires "^4.2" for
sabre/http and run <code>composer update</code>.</p>

<p>Full changelog can be found on <a href="https://github.com/fruux/sabre-http/blob/4.2.2/CHANGELOG.md">Github</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[sabre/uri 2.1.0 and 1.2.0 released]]></title>
            <link href="http://sabre.io/blog/2016/sabre-uri-2.1.0-1.2.0-release"/>
            <updated>2016-12-07T00:59:19+00:00</updated>
            <id>http://sabre.io/blog/2016/sabre-uri-2.1.0-1.2.0-release</id>
            <content type="html"><![CDATA[<p>We just released sabre/uri 2.1.0 and 1.2.0. This release adds a new pure-php
fallback parser for uris to work around two problems with PHP's <code>parse_url()</code>,
which had trouble with uris that start with a <code>scheme:///</code> (triple-slash) and
relative uri containing an unencoded colon.</p>

<p>2.1.0 and 1.2.0 have an identical API, the only difference is that 2.1.0 uses
strict PHP 7 typehints and 1.2.0 supports older PHP versions.</p>

<p>To upgrade sabre/uri, make sure your <code>composer.json</code> requires "^2.1" for
sabre/uri and run <code>composer update</code>.</p>

<p>Full changelog can be found on <a href="https://github.com/fruux/sabre-uri/blob/2.1.0/CHANGELOG.md">Github</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[sabre/vobject 4.1.2 released]]></title>
            <link href="http://sabre.io/blog/2016/sabre-vobject-4.1.2-release"/>
            <updated>2016-12-06T04:19:17+00:00</updated>
            <id>http://sabre.io/blog/2016/sabre-vobject-4.1.2-release</id>
            <content type="html"><![CDATA[<p>We just released sabre/vobject 4.1.2.</p>

<p>This release adds a few new features, and fixes several issues:</p>

<ol>
<li>Support for <code>BYWEEKDAY</code> and <code>BYWEEKNO</code> recurrences when <code>FREQ=YEARLY</code>.</li>
<li>Support for more Windows and Outlook 365 timezone ID's.</li>
<li>Fixing a problem with all-day events in the recurrence iterator.</li>
</ol>

<p>Upgrade sabre/vobject by running:</p>

<pre><code>composer update sabre/vobject
</code></pre>

<p>Full changelog can be found on <a href="https://github.com/fruux/sabre-vobject/blob/4.1.2/CHANGELOG.md">Github</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[sabre/xml 2 released]]></title>
            <link href="http://sabre.io/blog/2016/sabre-xml-2.0.0-release"/>
            <updated>2016-11-16T05:58:46+00:00</updated>
            <id>http://sabre.io/blog/2016/sabre-xml-2.0.0-release</id>
            <content type="html"><![CDATA[<p>We just released sabre/xml 2.0.0.  Just like the major sabre/uri and
sabre/event releases earlier, the main change is that we now require PHP 7
and use strict typing across the board.</p>

<p>For most people this upgrade should be seamless. The exception is if your
own code already opted-in to strict typing and you were sending incorrect
types to sabre/xml.</p>

<ul>
<li><a href="https://github.com/fruux/sabre-xml/blob/2.0.0/CHANGELOG.md">Changelog</a>.</li>
<li><a href="https://github.com/fruux/sabre-xml/releases">Release info</a>.</li>
</ul>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[sabre/event 5 released]]></title>
            <link href="http://sabre.io/blog/2016/sabre-event-5.0.0-release"/>
            <updated>2016-10-23T19:24:04+00:00</updated>
            <id>http://sabre.io/blog/2016/sabre-event-5.0.0-release</id>
            <content type="html"><![CDATA[<p>We just released sabre/event 5.0.0. This is only a month after the last major
release, but it's for a good reason.</p>

<p>We've made a change in how coroutines work. Co-routines, which are based on
generators were originally introduced in sabre/event for PHP 5.5.</p>

<p>At the time it was not possible for a PHP generator function to return
anything like this:</p>

<pre><code>function foo() {
    yield 1;
    return 2;
}
</code></pre>

<p>To work with this limitation in coroutines, we treated the last value that
was passed with <code>yield</code> as the "returned value".</p>

<p>Since PHP 7 it is possible to use <code>return</code> and the PHP Generator object has a
<code>getReturn()</code> method to access it.</p>

<p>We missed this in sabre/event 4, but it was quickly pointed out by Felix
Becker.</p>

<p>Using <code>return</code> makes so much sense now we can, it was worth making a BC break
for and releasing sabre/event 5 with the more sane behavior for PHP 7.</p>

<p>So today there's a sabre/event 5, and the only change is that if the previous
example of the generator function is used in the coroutine system, it will now
have <code>2</code> as its result instead of <code>1</code>.</p>

<ul>
<li><a href="https://github.com/fruux/sabre-event/blob/5.0.0/CHANGELOG.md">Changelog</a>.</li>
<li><a href="https://github.com/fruux/sabre-event/releases">Release info</a>.</li>
</ul>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[sabre/xml 1.5.0 released]]></title>
            <link href="http://sabre.io/blog/2016/sabre-xml-1.5.0-release"/>
            <updated>2016-10-09T23:04:39+00:00</updated>
            <id>http://sabre.io/blog/2016/sabre-xml-1.5.0-release</id>
            <content type="html"><![CDATA[<p>We just released sabre/xml 1.5.0. This release puts the minimim PHP version at
PHP 5.5.</p>

<p>This release fixes an infinite loop bug during parsing of some invalid XML
documents, and contains an improvement in how we're dealing with the "context
stack", thanks to the PHP 5.5 <code>finally</code> keyword. Upgrading is recommended.</p>

<p>Upgrade sabre/xml by running:</p>

<pre><code>composer update sabre/xml
</code></pre>

<p>Full changelog can be found on <a href="https://github.com/fruux/sabre-xml/blob/1.5.0/CHANGELOG.md">Github</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[sabre/dav 2.1 End of life]]></title>
            <link href="http://sabre.io/blog/2016/sabre-dav-2.1-eol"/>
            <updated>2016-10-07T03:48:20+00:00</updated>
            <id>http://sabre.io/blog/2016/sabre-dav-2.1-eol</id>
            <content type="html"><![CDATA[<p>sabre/dav 2.1 is now "end of life". This means that no more bugs will be
fixed, including security bugs.</p>

<p>We've released one final release (<a href="https://github.com/fruux/sabre-dav/releases/tag/2.1.11">2.1.11</a>) with some last final tweaks,
but you're strongly urged to upgrade to at least 3.0, and preferably 3.2.</p>

<p>For more information about the support schedule, and for upgrade instructions,
check out the <a href="/dav/upgrading/">upgrading</a> page.</p>

<p>Because this is the last release to use the (relatively unpopular) sabre/http
3.x package, this also marks sabre/http 3.x as EOL.</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[sabre/uri 2 released]]></title>
            <link href="http://sabre.io/blog/2016/sabre-uri-2.0.0-release"/>
            <updated>2016-10-07T02:55:41+00:00</updated>
            <id>http://sabre.io/blog/2016/sabre-uri-2.0.0-release</id>
            <content type="html"><![CDATA[<p>We just released sabre/uri 2.0. The sole change in this package is that it now
requires PHP 7 and has typehints where appropriate. Upgrading should be
seamless.</p>

<p>Both 1.x and 2.x will be maintained and receive bugfixes.</p>

<p>To upgrade sabre/uri, make sure your <code>composer.json</code> requires "^2.0" for
sabre/uri and run <code>composer update</code>.</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[sabre/event 4 released]]></title>
            <link href="http://sabre.io/blog/2016/sabre-event-4.0.0-release"/>
            <updated>2016-09-20T02:42:15+00:00</updated>
            <id>http://sabre.io/blog/2016/sabre-event-4.0.0-release</id>
            <content type="html"><![CDATA[<p>We just released sabre/event 4.0.0.</p>

<p>This release requires PHP 7, and has the following new features:</p>

<ul>
<li>PHP 7 typehints where they make sense, <code>strict_types</code> used everywhere.</li>
<li>Support for a new <code>WildcardEmitter</code> this Emitter has the same interface as
the regular <code>Emitter</code>, but it allows you to listen for events such as
<code>updated:*</code>, which would get triggered for any event that starts with
<code>updated:</code>.</li>
<li><code>EventEmitter</code>, <code>EventEmitterTrait</code> and <code>EventEmitterInterface</code> are renamed
to <code>Emitter</code>, <code>EmitterTrait</code> and <code>EmitterInterface</code>.</li>
<li>Promises now correctly handle PHP 7 <code>Trowable</code>.</li>
<li>Promises <em>must</em> now be rejected by an object implementing <code>Trowable</code>. In the
past it was possible to reject a Promise with any value (like Javascript),
but unlike Javascript, you can't throw a string in PHP. I felt that this
made the Promise a bit more predictable.</li>
</ul>

<h3 id="php-5.5">PHP 5.5</h3>

<p>sabre/event 3 will continue to be supported. I don't suspect new bugs will
appear there though, as it's a fairly simple package.</p>

<p>To upgrade sabre/event, make sure your <code>composer.json</code> requires "^4.0" for
sabre/event.</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Baïkal 0.4.6 released]]></title>
            <link href="http://sabre.io/blog/2016/baikal-0.4.6-release"/>
            <updated>2016-08-19T13:12:50+00:00</updated>
            <id>http://sabre.io/blog/2016/baikal-0.4.6-release</id>
            <content type="html"><![CDATA[<p>We just released Baïkal 0.4.6. This release contains a fix that prevented
some users froms syncing contacts, if they were using the SQLite backend.</p>

<p>Upgrading is recommended.</p>

<p>Read the <a href="/baikal/upgrade/" title="Upgrade instructions">upgrade instructions here</a>. Full changelog can be found on <a href="https://github.com/fruux/Baikal/blob/0.4.6/CHANGELOG.md" title="Change log">Github</a></p>
]]></content>
        </entry>
    </feed>